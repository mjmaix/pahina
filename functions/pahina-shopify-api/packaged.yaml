AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'sam-app

  Sample SAM Template for sam-app

  '
Parameters:
  FunctionName:
    Type: String
    Default: pahina-shopify-api
    Description: The Lambda Function Name
  AutoPublishAliasName:
    Type: String
    Default: current
    Description: The alias used for Auto Publishing
  EnvType:
    Description: Environment for this function
    Type: String
    Default: dev
    AllowedValues:
    - dev
    - prod
    - test
    - NONE
  ShopifyApiHost:
    Description: Shopify hostname
    Type: String
    Default: freelitemjabadilla.myshopify.com
  ShopifyApiVersion:
    Description: Shopify API version
    Type: String
    Default: 2019-07
    AllowedValues:
    - 2019-07
Mappings:
  AmplifyProject:
    UserPoolId:
      dev: ap-southeast-1_1CQQvDhhM
      prod: ''
    UserPoolClientId:
      dev: 5fkitdjec8gal86vus1q9cp91q
      prod: ''
Globals:
  Api:
    Cors: '''*'''
    TracingEnabled: true
    Variables:
      ENV:
        Ref: EnvType
  Function:
    Tracing: Active
    Timeout: 30
    Runtime: nodejs10.x
    AutoPublishAlias:
      Ref: AutoPublishAliasName
    Environment:
      Variables:
        REGION:
          Ref: AWS::Region
        ENV:
          Ref: EnvType
        COGNITO_USER_POOL_CLIENT_ID:
          Fn::FindInMap:
          - AmplifyProject
          - UserPoolClientId
          - Ref: EnvType
        SHOPIFY_API_HOSTNAME:
          Ref: ShopifyApiHost
        SHOPIFY_API_VERSION:
          Ref: ShopifyApiVersion
Resources:
  PahinaAPILambdaPermission:
    DependsOn: SampleFunction
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      SourceArn:
        Fn::Sub: arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${PahinaRestApi}/*
      FunctionName:
        Fn::Sub:
        - ${FuncArn}:current
        - FuncArn:
            Fn::GetAtt:
            - SampleFunction
            - Arn
      Principal: apigateway.amazonaws.com
  FunctionIAMRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - sts:AssumeRole
          Principal:
            Service:
            - lambda.amazonaws.com
      Policies:
      - PolicyName: LambdaExecutionRole
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:*
            Resource: '*'
          - Effect: Allow
            Action:
            - xray:PutTraceSegments
            - xray:PutTelemetryRecords
            Resource: '*'
  PahinaRestApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName:
        Ref: EnvType
      Auth:
        DefaultAuthorizer: PahinaCognitoAuthorizer
        Authorizers:
          PahinaCognitoAuthorizer:
            UserPoolArn:
              Fn::Sub:
              - arn:aws:cognito-idp:${AWS::Region}:${AWS::AccountId}:userpool/${poolId}
              - poolId:
                  Fn::FindInMap:
                  - AmplifyProject
                  - UserPoolId
                  - Ref: EnvType
      DefinitionBody:
        swagger: 2.0
        info:
          title:
            Fn::Sub:
            - API-${name}-${env}
            - env:
                Ref: EnvType
              name:
                Ref: FunctionName
        paths:
          /{proxy+}:
            x-amazon-apigateway-any-method:
              produces:
              - application/json
              x-amazon-apigateway-integration:
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${SampleFunction.Arn}:${AutoPublishAliasName}/invocations
                passthroughBehavior: when_no_match
                httpMethod: POST
                type: aws_proxy
  SampleFunction:
    Type: AWS::Serverless::Function
    Properties:
      AutoPublishAlias:
        Ref: AutoPublishAliasName
      FunctionName:
        Fn::Sub:
        - ${FunctionName}-${env}
        - env:
            Ref: EnvType
      CodeUri: s3://pahina-shopify-api/61a3c0c2845d22c9329d7f5a6bf48eb3
      Handler: sample/app.lambdaHandler
      Events:
        AnyRequest:
          Type: Api
          Properties:
            Path: /
            Method: ANY
            RestApiId:
              Ref: PahinaRestApi
      Role:
        Fn::GetAtt:
        - FunctionIAMRole
        - Arn
Outputs:
  SampleApi:
    Description: API Gateway endpoint URL for Prod stage for Sample function
    Value:
      Fn::Sub:
      - https://${PahinaRestApi}.execute-api.${AWS::Region}.amazonaws.com/${env}/hello/
      - env:
          Ref: EnvType
  SampleFunction:
    Description: Sample Lambda Function ARN
    Value:
      Fn::GetAtt:
      - SampleFunction
      - Arn
  FunctionIAMRole:
    Description: Managed IAM Role created for Sample function
    Value:
      Fn::GetAtt:
      - FunctionIAMRole
      - Arn
